name: Test

on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]

env:
    IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
    DRY_RUN: true # Change this to false for actual publishing

jobs:
    push:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ secrets.NODE_VERSION }}

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test

            - name: Build image
              run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

            - name: Log in to registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            - name: Tag and (optionally) push image
              run: |
                  IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

                  # This changes all uppercase characters to lowercase.
                  IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
                  # This strips the git ref prefix from the version.
                  VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
                  # This strips the "v" prefix from the tag name.
                  [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
                  # This uses the Docker `latest` tag convention.
                  [ "$VERSION" == "main" ] && VERSION=latest
                  echo IMAGE_ID=$IMAGE_ID
                  echo VERSION=$VERSION

                  docker tag $IMAGE_NAME $IMAGE_ID:$VERSION

                  if [ "${{ env.DRY_RUN }}" = "true" ]; then
                    echo "Dry run: skipping docker push"
                  else
                    docker push $IMAGE_ID:$VERSION
                  fi
